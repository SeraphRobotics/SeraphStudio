 <toolScript name="Orthotic 29-3 "
             description="Usage: Vertical pathing \nTool:   Valve with a blue taper tip"
             printer="Orthotic">

  <settings>
    <!-- Settings that are not per-tool -->
    <printAcceleration text="Print Acceleration" units="mm/s^2">100</printAcceleration>
  </settings>

   <!-- Expose settings for the first tool -->
   <tool name="Green Taper ValveStochastic29dot3" material="ValveStochastic29dot3" scriptVariable="ValveStochastic29dot3">
     <settings>
       <sliceHeight text="Slice Height" units="mm">1</sliceHeight>
       <!--Top speed in millimeters/second for this tool during execution of path.-->
         <pathSpeed text="Path Speed" units="mm/s">10</pathSpeed>
       <!--Width of the path in millimeters.-->
         <pathWidth text="Path Width" units="mm">0.85</pathWidth>
       <!--(millimeters of plunger motion)/(millimeters tool travel) along deposition path.-->
         <depositionRate text="DepositionRate" units="mm/mm">0.00</depositionRate>
       <!--Seconds of early dispensing to start flow quickly.-->
         <pushout text="Pushout" units="seconds">0.06</pushout>
       <!--Seconds reverse plunger motion to stop flow quickly.-->
         <suckback text="Suckback" units="seconds">0.06</suckback>
       <!--Seconds to delay suckback by.-->
         <suckbackDelay text="Suckback Delay" units="seconds">0</suckbackDelay>
       <!--Millimeters of clearance between tip and last layer when traversing.-->
         <clearance text="Clearance" units="mm">0</clearance>
       <!--Number of paths after which to trigger an automatic pause.-->
         <pausePaths text="Pause after # Paths" units="# of paths">300</pausePaths>
       <!--no comment-->
         <pitch text="Pitch" units="?">0.000397</pitch>
     </settings>
   </tool>

  <printScript>
  <![CDATA[

progress.setSteps(ValveStochastic29dot3.meshes.length*2 + 3);

slicer.setSliceHeight(ValveStochastic29dot3.sliceHeight);
pather.set("PathWidth", ValveStochastic29dot3.pathWidth);
pather.set("density",0.5);
for (var i = 0; i < ValveStochastic29dot3.meshes.length; ++i) {
  progress.log("Slicing ValveStochastic29dot3 Mesh");
  slicer.doSlicing(ValveStochastic29dot3.meshes[i]);
  progress.step();
  progress.log("Pathing ValveStochastic29dot3 Mesh");
  pather.doPathing(ValveStochastic29dot3.meshes[i]);
  progress.step();
}

var ValveStochastic29dot3MaterialCalibration = {
  pathSpeed: ValveStochastic29dot3.pathSpeed,
  depositionRate: 0.0,
  pathWidth: ValveStochastic29dot3.pathWidth,
  depositionRate: ValveStochastic29dot3.depositionRate,
  pushout: ValveStochastic29dot3.pushout,
  suckback: ValveStochastic29dot3.suckback,
  suckbackDelay: ValveStochastic29dot3.suckbackDelay,
  clearance: ValveStochastic29dot3.clearance,
  pausePaths: ValveStochastic29dot3.pausePaths,
  pitch: ValveStochastic29dot3.pitch
};

var fabWriter = fabFile.fabAtHomeModel2Writer();

fabWriter.addMeshes("ValveStochastic29dot3", ValveStochastic29dot3MaterialCalibration, ValveStochastic29dot3.meshes);
progress.step();

fabWriter.sortBottomUp();
fabWriter.setPrintAcceleration(printAcceleration);

progress.step();
fabWriter.print();

progress.finish();

  ]]>
  </printScript>
</toolScript>
